# Script para testar pagamento PIX real
# Este script cria um pagamento de teste que voc√™ pode pagar de verdade

Write-Host "üí∞ TESTE PIX REAL" -ForegroundColor Green
Write-Host "=========================" -ForegroundColor Cyan
Write-Host ""

# Verificar se o servidor est√° rodando
try {
    $response = Invoke-WebRequest -Uri "http://localhost:3001" -Method GET -TimeoutSec 5 -UseBasicParsing
    Write-Host "‚úÖ Servidor rodando corretamente!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Servidor n√£o est√° rodando!" -ForegroundColor Red
    Write-Host "   Execute primeiro: npm start" -ForegroundColor Yellow
    exit 1
}

Write-Host ""
Write-Host "üìù CRIANDO PAGAMENTO PIX DE TESTE..." -ForegroundColor Cyan
Write-Host ""

# Coletar dados do pagamento
$userName = Read-Host "üë§ Seu nome para o pagamento"
if (-not $userName) { $userName = "Teste PIX Real" }

$amount = Read-Host "üí∞ Valor do teste (ex: 0.01 para 1 centavo)"
if (-not $amount) { $amount = "0.01" }

try {
    $amountNum = [decimal]$amount
    if ($amountNum -le 0) {
        throw "Valor deve ser maior que zero"
    }
} catch {
    Write-Host "‚ùå Valor inv√°lido! Use formato: 1.50" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üîÑ Criando pagamento..." -ForegroundColor Yellow

# Criar pagamento
$payload = @{
    userName = $userName
    amount = $amountNum
    paymentMethod = "pix"
    email = "teste@exemplo.com"
} | ConvertTo-Json

try {
    $response = Invoke-RestMethod -Uri "http://localhost:3001/create-payment" `
        -Method POST `
        -Body $payload `
        -ContentType "application/json" `
        -TimeoutSec 15

    if ($response.success) {
        Write-Host ""
        Write-Host "‚úÖ PAGAMENTO PIX CRIADO COM SUCESSO!" -ForegroundColor Green
        Write-Host "=======================================" -ForegroundColor Cyan
        Write-Host ""
        Write-Host "üìã DETALHES DO PAGAMENTO:" -ForegroundColor Cyan
        Write-Host "   üÜî ID: $($response.paymentId)" -ForegroundColor Gray
        Write-Host "   üë§ Nome: $userName" -ForegroundColor Gray
        Write-Host "   üí∞ Valor: R$ $amount" -ForegroundColor Gray
        Write-Host "   üîß Fonte: $($response.paymentData.source)" -ForegroundColor Gray
        
        if ($response.paymentData.pixKey) {
            Write-Host "   üîë Chave PIX: $($response.paymentData.pixKey)" -ForegroundColor Gray
        }
        
        Write-Host ""
        Write-Host "üì± C√ìDIGO PIX PARA PAGAMENTO:" -ForegroundColor Green
        Write-Host "================================" -ForegroundColor Cyan
        Write-Host $response.paymentData.pixCode -ForegroundColor White
        Write-Host "================================" -ForegroundColor Cyan
        Write-Host ""
        
        # Salvar c√≥digo PIX em arquivo
        $response.paymentData.pixCode | Out-File -FilePath "pix-code-$($response.paymentId).txt" -Encoding UTF8
        
        Write-Host "üíæ C√≥digo PIX salvo em: pix-code-$($response.paymentId).txt" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "üéØ COMO PAGAR:" -ForegroundColor Green
        Write-Host "   1. üì± Abra seu app banc√°rio" -ForegroundColor Cyan
        Write-Host "   2. üîç V√° em PIX > Pagar com c√≥digo" -ForegroundColor Cyan
        Write-Host "   3. üìã Cole o c√≥digo PIX acima" -ForegroundColor Cyan
        Write-Host "   4. ‚úÖ Confirme o pagamento" -ForegroundColor Cyan
        Write-Host ""
        Write-Host "üåê INTERFACE WEB:" -ForegroundColor Green
        Write-Host "   Acesse: http://localhost:3001" -ForegroundColor Blue
        Write-Host "   Para ver o QR code visual" -ForegroundColor Gray
        Write-Host ""
        Write-Host "üìä MONITORAMENTO:" -ForegroundColor Green
        Write-Host "   ‚Ä¢ O webhook est√° ativo em /webhook" -ForegroundColor Gray
        Write-Host "   ‚Ä¢ Logs aparecem no terminal do servidor" -ForegroundColor Gray
        Write-Host "   ‚Ä¢ Status √© atualizado automaticamente" -ForegroundColor Gray
        Write-Host ""
        
        # Perguntar se quer abrir a interface web
        $openWeb = Read-Host "Deseja abrir a interface web? (s/n)"
        if ($openWeb -eq "s" -or $openWeb -eq "S") {
            Start-Process "http://localhost:3001"
        }
        
        # Perguntar se quer copiar c√≥digo PIX
        $copyCode = Read-Host "Deseja copiar o c√≥digo PIX para a √°rea de transfer√™ncia? (s/n)"
        if ($copyCode -eq "s" -or $copyCode -eq "S") {
            $response.paymentData.pixCode | Set-Clipboard
            Write-Host "üìã C√≥digo PIX copiado!" -ForegroundColor Green
        }
        
    } else {
        Write-Host "‚ùå Erro ao criar pagamento: $($response.error)" -ForegroundColor Red
    }
    
} catch {
    Write-Host "‚ùå Erro na requisi√ß√£o: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host ""
    Write-Host "üîß POSS√çVEIS SOLU√á√ïES:" -ForegroundColor Yellow
    Write-Host "   ‚Ä¢ Verifique se o servidor est√° rodando" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ Execute: npm start" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ Verifique as configura√ß√µes PIX no .env" -ForegroundColor Gray
}

Write-Host ""
Write-Host "üéâ Teste conclu√≠do!" -ForegroundColor Green
